/*
 * Generated by the Mule project wizard. http://mule.mulesoft.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package com.acmesoft.zeromq;

import com.acmesoft.stock.model.StockQuote;
import com.acmesoft.stock.model.StockQuoteRequest;
import com.acmesoft.stock.model.serialization.protobuf.StockQuoteBuffer;
import com.acmesoft.stock.model.serialization.protobuf.StockQuoteResponseBuffer;
import com.acmesoft.stock.model.serialization.protobuf.StockQuoteResponseMessage;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.mule.tck.junit4.FunctionalTestCase;

import org.junit.Test;
import org.zeromq.ZMQ;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

public class ZeromqTestCase extends FunctionalTestCase {

    protected static final DateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ");

    protected String getConfigResources() {
        //TODO You'll need to edit this file to make the test applicable to your module
        return "src/main/app/mule-config.xml";
    }

    private static ZMQ.Context zmqContext;


    @BeforeClass
    public static void oneTimeSetUp() {
        zmqContext = ZMQ.context(1);
    }

    @AfterClass
    public static void oneTimeTearDown() {
        zmqContext.term();
    }

    @Test
    public void testCanGetStockQuote() throws Exception {

        StockQuoteRequest stockQuoteRequest = new StockQuoteRequest();
        stockQuoteRequest.setSymbol("FB");
        stockQuoteRequest.setStartDate(new Date());
        stockQuoteRequest.setEndDate(new Date());

        ZMQ.Socket zmqSocket = zmqContext.socket(ZMQ.REQ);
        zmqSocket.setReceiveTimeOut(RECEIVE_TIMEOUT);
        zmqSocket.connect("tcp://localhost:9090");
        zmqSocket.send(stockQuoteRequest.toProtocolBufferAsBytes(), 0);
        List<StockQuote> quotes = StockQuote.listOfStockQuotesFromBytes(zmqSocket.recv(0));
        assertEquals(5, quotes.size());
        zmqSocket.close();
    }
}
